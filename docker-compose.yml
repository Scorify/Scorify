services:
  redis:
    container_name: scorify-redis
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - scorify-redis:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --requirepass $REDIS_PASSWORD --port $REDIS_PORT
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
  postgres:
    container_name: scorify-db
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - scorify-postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  scorify:
    container_name: scorify-server
    build:
      context: .
      dockerfile: Dockerfile.scorify
    restart: unless-stopped
    volumes:
      - scorify-server:/app/files
    ports:
      - 8080:8080
      - 50051:50051
    command: ["server"]
    depends_on:
      - redis
      - postgres
  minion:
    container_name: scorify-minion
    build:
      context: .
      dockerfile: Dockerfile.scorify
    restart: unless-stopped
    command: ["minion"]
  frontend:
    container_name: scorify-frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - scorify-caddy-data:/data
      - scorify-caddy-config:/config
    environment:
      DOMAIN: ${DOMAIN}
      PORT: ${PORT}
      VITE_DOMAIN: ${DOMAIN}
      VITE_PORT: ${PORT}
    depends_on:
      - scorify

volumes:
  scorify-redis:
  scorify-postgres:
  scorify-server:
  scorify-caddy-data:
  scorify-caddy-config:
